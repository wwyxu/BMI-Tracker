[{"C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\index.js":"1","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\App.js":"2","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\components\\Logs.js":"4","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\components\\Bmi.js":"5","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\middleware\\localstorage.js":"6"},{"size":500,"mtime":1610510791000,"results":"7","hashOfConfig":"8"},{"size":2327,"mtime":1611147696718,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610510791000,"results":"10","hashOfConfig":"8"},{"size":1520,"mtime":1611140274232,"results":"11","hashOfConfig":"8"},{"size":9428,"mtime":1611146693495,"results":"12","hashOfConfig":"8"},{"size":388,"mtime":1610907925771,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"6s7srx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\index.js",[],["29","30"],"C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\App.js",[],"C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\components\\Logs.js",["31","32","33","34"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Logs = ({\r\n  weight,\r\n  height,\r\n  id,\r\n  date,\r\n  bmi,\r\n  phrase,\r\n  deleteCard,\r\n  darkMode,\r\n}) => {\r\n  const onDelete = () => {\r\n    deleteCard(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        darkMode\r\n          ? \"card bg-dark card_\" + phrase.split(\" \")[0]\r\n          : \"card card_\" + phrase.split(\" \")[0]\r\n      }\r\n    >\r\n      <div className=\"card-content\">\r\n        <div className=\"card-data p-1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <a>BMI: {bmi}</a>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <a>Weight: {weight} kg</a>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <a>Height: {height} cm</a>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <a>{date}</a>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <Button\r\n                className=\"btn-sm float-right\"\r\n                variant=\"danger\"\r\n                onClick={onDelete}\r\n              >\r\n                x\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogs.propTypes = {\r\n  weight: PropTypes.string,\r\n  height: PropTypes.string,\r\n  id: PropTypes.string,\r\n  date: PropTypes.string,\r\n  bmi: PropTypes.string,\r\n  phrase: PropTypes.string,\r\n  deleteCard: PropTypes.func,\r\n};\r\n\r\nexport default Logs;\r\n","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\components\\Bmi.js",["35","36"],"import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst Bmi = ({ submit, darkMode, setDark }) => {\r\n  const [height, setHeight] = useState(0);\r\n  const [weight, setWeight] = useState(0);\r\n  const [bmi, setBmi] = useState(0);\r\n  const [date, setDate] = useState(\"\");\r\n  const [phrase, setPhrase] = useState(null);\r\n\r\n  // Set Phrase according to calculation\r\n  const updateHeight = (e) => {\r\n    const newDate = new Date().toLocaleString().split(\",\")[0];\r\n    setDate(newDate);\r\n    if (e.target.value > 999) {\r\n      setHeight(999);\r\n      setBmi(((weight * 10000) / Math.pow(999, 2)).toFixed(2));\r\n      switch (true) {\r\n        case ((weight * 10000) / Math.pow(999, 2)).toFixed(2) < 0.1:\r\n          setPhrase(null);\r\n          break;\r\n        case ((weight * 10000) / Math.pow(999, 2)).toFixed(2) < 18.5:\r\n          setPhrase(\"underweight\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(999, 2)).toFixed(2) < 24.9:\r\n          setPhrase(\"normal\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(999, 2)).toFixed(2) < 29.9:\r\n          setPhrase(\"overweight\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(999, 2)).toFixed(2) < 34.9:\r\n          setPhrase(\"obese\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(999, 2)).toFixed(2) < 260:\r\n          setPhrase(\"very obese\");\r\n          break;\r\n        default:\r\n          setPhrase(null);\r\n      }\r\n    } else {\r\n      setHeight(e.target.value);\r\n      setBmi(((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2));\r\n      switch (true) {\r\n        case ((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2) < 0.1:\r\n          setPhrase(null);\r\n          break;\r\n        case ((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2) < 18.5:\r\n          setPhrase(\"underweight\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2) < 24.9:\r\n          setPhrase(\"normal\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2) < 29.9:\r\n          setPhrase(\"overweight\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2) < 34.9:\r\n          setPhrase(\"obese\");\r\n          break;\r\n        case ((weight * 10000) / Math.pow(e.target.value, 2)).toFixed(2) < 260:\r\n          setPhrase(\"very obese\");\r\n          break;\r\n        default:\r\n          setPhrase(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateWeight = (e) => {\r\n    const newDate = new Date().toLocaleString().split(\",\")[0];\r\n    setDate(newDate);\r\n    if (e.target.value > 999) {\r\n      setWeight(999);\r\n      setBmi(((999 * 10000) / Math.pow(height, 2)).toFixed(2));\r\n      switch (true) {\r\n        case ((999 * 10000) / Math.pow(height, 2)).toFixed(2) < 0.1:\r\n          setPhrase(null);\r\n          break;\r\n        case ((999 * 10000) / Math.pow(height, 2)).toFixed(2) < 18.5:\r\n          setPhrase(\"underweight\");\r\n          break;\r\n        case ((999 * 10000) / Math.pow(height, 2)).toFixed(2) < 24.9:\r\n          setPhrase(\"normal\");\r\n          break;\r\n        case ((999 * 10000) / Math.pow(height, 2)).toFixed(2) < 29.9:\r\n          setPhrase(\"overweight\");\r\n          break;\r\n        case ((999 * 10000) / Math.pow(height, 2)).toFixed(2) < 34.9:\r\n          setPhrase(\"obese\");\r\n          break;\r\n        case ((999 * 10000) / Math.pow(height, 2)).toFixed(2) < 260:\r\n          setPhrase(\"very obese\");\r\n          break;\r\n        default:\r\n          setPhrase(null);\r\n      }\r\n    } else {\r\n      setWeight(e.target.value);\r\n      setBmi(((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2));\r\n      switch (true) {\r\n        case ((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2) < 0.1:\r\n          setPhrase(null);\r\n          break;\r\n        case ((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2) < 18.5:\r\n          setPhrase(\"underweight\");\r\n          break;\r\n        case ((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2) < 24.9:\r\n          setPhrase(\"normal\");\r\n          break;\r\n        case ((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2) < 29.9:\r\n          setPhrase(\"overweight\");\r\n          break;\r\n        case ((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2) < 34.9:\r\n          setPhrase(\"obese\");\r\n          break;\r\n        case ((e.target.value * 10000) / Math.pow(height, 2)).toFixed(2) < 260:\r\n          setPhrase(\"very obese\");\r\n          break;\r\n        default:\r\n          setPhrase(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    submit({ date, height, weight, bmi, phrase });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        darkMode\r\n          ? \"col-12 light-shadow py-2 dark_mode rounded\"\r\n          : \"col-12 shadow py-2 bg-light rounded\"\r\n      }\r\n    >\r\n      <div className=\"row heading mb-3\">\r\n        <div className=\"col-1\">\r\n          {darkMode === false ? (\r\n            <a onClick={() => setDark(true)}>\r\n              <i className=\"fas fa-moon\" />\r\n            </a>\r\n          ) : (\r\n            <a onClick={() => setDark(false)}>\r\n              <i className=\"fas fa-sun\" />\r\n            </a>\r\n          )}\r\n        </div>\r\n        <div className=\"col-10\">\r\n          <h1 className=\"pb-2 text-center\">BMI Tracker</h1>\r\n        </div>\r\n        <div className=\"col-1\"></div>\r\n      </div>\r\n      <div className=\"row no-gutters pt-1\">\r\n        <div className=\"col-6\">\r\n          <h5 className=\"pb-1\">Height (in cm)</h5>\r\n          <Form.Group>\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={height}\r\n              onChange={updateHeight}\r\n              className={darkMode ? \"bg-dark\" : \"bg-light\"}\r\n              style={darkMode ? { color: \"rgb(219, 219, 219)\" } : {}}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <h5 className=\"pb-1\">Weight (in kg)</h5>\r\n          <Form.Group className=\"my-2 ml-1\">\r\n            <Form.Control\r\n              type=\"number\"\r\n              value={weight}\r\n              onChange={updateWeight}\r\n              className={darkMode ? \"bg-dark\" : \"bg-light\"}\r\n              style={darkMode ? { color: \"rgb(219, 219, 219)\" } : {}}\r\n            />\r\n          </Form.Group>\r\n        </div>\r\n      </div>\r\n      <div className=\"row no-gutters\">\r\n        <div className=\"col-6 pr-1\">\r\n          <h5>\r\n            Your BMI is {\"  \"}\r\n            <b>{bmi < 0.01 || bmi > 260 || !isFinite(bmi) ? \"\" : bmi}</b>\r\n          </h5>\r\n          <h5 style={{ display: \"Inline\" }}>This BMI falls under{\"  \"}</h5>\r\n          <h5\r\n            className={phrase + \" font-weight-bold\"}\r\n            style={{ display: \"Inline\" }}\r\n          >\r\n            {phrase ? phrase : null}\r\n          </h5>\r\n          <br />\r\n          {phrase ? (\r\n            <Button\r\n              className=\"mt-2 mb-1\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n            >\r\n              Log{\" \"}\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              className=\"mt-2 mb-1\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              disabled\r\n            >\r\n              Log{\" \"}\r\n            </Button>\r\n          )}\r\n          <br />\r\n          <small>The 10 most recent logs will be stored</small>\r\n        </div>\r\n        <div className=\"col-6 pl-1 pb-2 text-center\">\r\n          <div\r\n            className={\r\n              darkMode\r\n                ? \"bg-dark card card_underweight\"\r\n                : \"bg-light card card_underweight\"\r\n            }\r\n          >\r\n            <div className=\"p-1\">\r\n              <b className style={{ color: \"#359cbb\" }}>\r\n                Underweight\r\n              </b>{\" \"}\r\n              | &#60; 18.5\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              darkMode\r\n                ? \"bg-dark card card_normal\"\r\n                : \"bg-light card card_normal\"\r\n            }\r\n          >\r\n            <div className=\"p-1\">\r\n              <b className style={{ color: \"#8bca60\" }}>\r\n                Normal\r\n              </b>{\" \"}\r\n              | 18.5 - 24.9\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              darkMode\r\n                ? \"bg-dark card card_overweight\"\r\n                : \"bg-light card card_overweight\"\r\n            }\r\n          >\r\n            <div className=\"p-1\">\r\n              <b className style={{ color: \"#c7c400\" }}>\r\n                Overweight\r\n              </b>{\" \"}\r\n              | 25 - 29.9\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              darkMode ? \"bg-dark card card_obese\" : \"bg-light card card_obese\"\r\n            }\r\n          >\r\n            <div className=\"p-1\">\r\n              <b className style={{ color: \"#f0a51a\" }}>\r\n                Obese\r\n              </b>{\" \"}\r\n              | 30 - 34.9\r\n            </div>\r\n          </div>\r\n          <div\r\n            className={\r\n              darkMode ? \"bg-dark card card_very\" : \"bg-light card card_very\"\r\n            }\r\n          >\r\n            <div className=\"p-1\">\r\n              <b className style={{ color: \"#c41414\" }}>\r\n                Very Obese\r\n              </b>{\" \"}\r\n              | &#62; 35\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bmi;\r\n","C:\\Users\\willi\\Documents\\Projects\\Deployed\\bmi-tracker\\src\\middleware\\localstorage.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":31,"column":15,"nodeType":"43","endLine":31,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":34,"column":15,"nodeType":"43","endLine":34,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":37,"column":15,"nodeType":"43","endLine":37,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":40,"column":15,"nodeType":"43","endLine":40,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":139,"column":13,"nodeType":"43","endLine":139,"endColumn":46},{"ruleId":"41","severity":1,"message":"42","line":143,"column":13,"nodeType":"43","endLine":143,"endColumn":47},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]